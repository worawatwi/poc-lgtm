apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pricing
  namespace: dev
  labels:
    app: pricing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pricing
  template:
    metadata:
      labels:
        app: pricing
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
    spec:
      containers:
        - name: app
          image: asia-docker.pkg.dev/tdnest-ops/app-docker/pricing:0.0.4
          ports:
            - containerPort: 8081
          env:
            - name: spring.r2dbc.url
              value: r2dbc:postgresql://postgresql:5432/postgres
            - name: management.metrics.distribution.slo.http.server.requests
              value: "5ms,10ms,25ms,50ms,75ms,100ms,250ms,500ms,750ms"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: pricing
  namespace: dev
  labels:
    app: pricing
spec:
  ports:
    - port: 8081
      protocol: TCP
  selector:
    app: pricing
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
  namespace: dev
  labels:
    app: product
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product
  template:
    metadata:
      labels:
        app: product
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
    spec:
      containers:
        - name: app
          image: asia-docker.pkg.dev/tdnest-ops/app-docker/product:0.0.16
          ports:
            - containerPort: 8082
          env:
            - name: priceClient.baseUrl
              value: http://pricing:8081
            - name: spring.r2dbc.url
              value: r2dbc:postgresql://postgresql:5432/postgres
            - name: management.metrics.distribution.slo.http.server.requests
              value: "5ms,10ms,25ms,50ms,75ms,100ms,250ms,500ms,750ms"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: product
  namespace: dev
  labels:
    app: product
spec:
  ports:
    - port: 8082
      protocol: TCP
  selector:
    app: product
  type: ClusterIP